[{"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Redux/quote-reducer.js":"1","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/API/api.js":"2","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/RandomQuote/QuoteContainer.jsx":"3","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/App.js":"4","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/Navibar/Navibar.jsx":"5","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/index.js":"6","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/RandomQuote/Quote.jsx":"7","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/reportWebVitals.js":"8","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/MarkdownPreviewer/MarkdownContainer.jsx":"9","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/DrumMachine/DrumPad.jsx":"10","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Redux/store.js":"11","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/DrumMachine/LetsDance/LetsDance.jsx":"12","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/Calculator/CalculatorContainer.jsx":"13","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/Calculator/Calculator.jsx":"14","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/TomatoTimer/TomatoTimerContainer.jsx":"15","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/TomatoTimer/TomatoTimer.jsx":"16","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/DrumMachine/DrumMachineContainer.jsx":"17","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/CV/CV.jsx":"18"},{"size":852,"mtime":1608662878708,"results":"19","hashOfConfig":"20"},{"size":443,"mtime":1611768273268,"results":"21","hashOfConfig":"20"},{"size":1795,"mtime":1611761203378,"results":"22","hashOfConfig":"20"},{"size":1147,"mtime":1612776046927,"results":"23","hashOfConfig":"20"},{"size":1153,"mtime":1612794587964,"results":"24","hashOfConfig":"20"},{"size":1014,"mtime":1612615106605,"results":"25","hashOfConfig":"20"},{"size":1790,"mtime":1612616055837,"results":"26","hashOfConfig":"20"},{"size":362,"mtime":1606142552977,"results":"27","hashOfConfig":"20"},{"size":2226,"mtime":1612814652136,"results":"28","hashOfConfig":"20"},{"size":767,"mtime":1611761543441,"results":"29","hashOfConfig":"20"},{"size":312,"mtime":1611760842147,"results":"30","hashOfConfig":"20"},{"size":1073,"mtime":1612616143565,"results":"31","hashOfConfig":"20"},{"size":5834,"mtime":1611761838836,"results":"32","hashOfConfig":"20"},{"size":2664,"mtime":1612907345715,"results":"33","hashOfConfig":"20"},{"size":3448,"mtime":1612462110212,"results":"34","hashOfConfig":"20"},{"size":3845,"mtime":1612616036225,"results":"35","hashOfConfig":"20"},{"size":8637,"mtime":1612884865448,"results":"36","hashOfConfig":"20"},{"size":18144,"mtime":1612790208340,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"91wmfe",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Redux/quote-reducer.js",[],["78","79"],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/API/api.js",[],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/RandomQuote/QuoteContainer.jsx",[],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/App.js",[],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/Navibar/Navibar.jsx",[],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/index.js",[],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/RandomQuote/Quote.jsx",[],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/reportWebVitals.js",[],["80","81"],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/MarkdownPreviewer/MarkdownContainer.jsx",["82"],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/DrumMachine/DrumPad.jsx",["83"],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Redux/store.js",[],["84","85"],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/DrumMachine/LetsDance/LetsDance.jsx",[],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/Calculator/CalculatorContainer.jsx",["86"],"import React from 'react'\nimport Calculator from './Calculator'\n\n//regex rules\nconst isOperator = /[*/+‑]/\nconst endsWithOperator = /[*+‑/]$/\nconst endWithNumber = /[0-9]$/\nconst endsWithNegativeSign = /(-){1}$/ // /\\d[x/+‑]{1}‑$/\n\n\nclass CalculatorContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentVal: '0',\n            prevVal: '0',\n            formula: '',\n            currentSign: 'pos',\n            lastClicked: ''\n        }\n    }\n\n    //check digit limit\n    maxDigitWarning = () => {\n        this.setState({\n            currentVal: 'Digit Limit Met',\n            prevVal: this.state.currentVal\n        });\n        setTimeout(() => this.setState({ currentVal: this.state.prevVal }), 1000);\n    }\n\n    // evaluate handler\n    handleEvaluate = () => {\n        if (!this.state.currentVal.includes('Limit')) {\n            let expression = this.state.formula;\n            while (endsWithOperator.test(expression)) {\n                expression = expression.slice(0, -1);\n            }\n            expression = expression\n                .replace(/x/g, '*')\n                .replace(/‑/g, '-')\n                .replace('--', '+0+0+0+0+0+0+');\n            let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\n            this.setState({\n                currentVal: answer.toString(),\n                formula:\n                    expression\n                        .replace(/-/g, '‑')\n                        .replace('+0+0+0+0+0+0+', '‑-')\n                        .replace(/(x|\\/|\\+)‑/, '$1-')\n                        .replace(/^‑/, '-') +\n                    '=' +\n                    answer,\n                prevVal: answer,\n                evaluated: true\n            });\n        }\n    }\n\n    //operator handler\n    handleOperators = (e) => {\n        if (!this.state.currentVal.includes('Limit')) {\n            const value = e.target.value;\n            const { formula, prevVal, evaluated } = this.state;\n            this.setState({ currentVal: value, evaluated: false });\n            if (evaluated) {\n                this.setState({ formula: prevVal + value });\n            } else if (endWithNumber.test(formula)) {\n                this.setState({\n                    prevVal: formula,\n                    formula: formula + value\n                });\n            } else if (!endsWithNegativeSign.test(formula)) {\n                this.setState({\n                    formula:\n                        (endsWithNegativeSign.test(formula + value) ? formula : prevVal) +\n                        value\n                });\n            }else if (value !== '‑') {\n                this.setState({\n                    formula: prevVal + value\n                });\n            }\n        }\n    }\n\n    //numbers handler\n    handleNumbers = (e) => {\n        if (!this.state.currentVal.includes('Limit')) {\n            const { currentVal, formula, evaluated } = this.state;\n            const value = e.target.value;\n            this.setState({ evaluated: false });\n            if (currentVal.length > 21) {\n                this.maxDigitWarning();\n            } else if (evaluated) {\n                this.setState({\n                    currentVal: value,\n                    formula: value !== '0' ? value : ''\n                });\n            } else {\n                this.setState({\n                    currentVal:\n                        currentVal === '0' || isOperator.test(currentVal)\n                            ? value\n                            : currentVal + value,\n                    formula:\n                        currentVal === '0' && value === '0'\n                            ? formula === ''\n                                ? value\n                                : formula\n                            : /([^.0-9]0|^0)$/.test(formula)\n                                ? formula.slice(0, -1) + value\n                                : formula + value\n                });\n            }\n        }\n    }\n\n    //decimal handler\n    handleDecimal = () => {\n        if (this.state.evaluated === true) {\n            this.setState({\n                currentVal: '0.',\n                formula: '0.',\n                evaluated: false\n            });\n        } else if (\n            !this.state.currentVal.includes('.') &&\n            !this.state.currentVal.includes('Limit')\n        ) {\n            this.setState({ evaluated: false });\n            if (this.state.currentVal.length > 21) {\n                this.maxDigitWarning();\n            } else if (\n                endsWithOperator.test(this.state.formula) ||\n                (this.state.currentVal === '0' && this.state.formula === '')\n            ) {\n                this.setState({\n                    currentVal: '0.',\n                    formula: this.state.formula + '0.'\n                });\n            } else {\n                this.setState({\n                    currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + '.',\n                    formula: this.state.formula + '.'\n                });\n            }\n        }\n    }\n\n    // start state\n    initialize = () => {\n        this.setState({\n            currentVal: '0',\n            prevVal: '0',\n            formula: '',\n            currentSign: 'pos',\n            lastClicked: '',\n            evaluated: false\n        });\n    }\n\n    render() {\n        return (\n            <Calculator formula={this.state.formula} \n                        currentValue={this.state.currentVal}\n                        operators={this.handleOperators}\n                        numbers={this.handleNumbers}\n                        initialize={this.initialize}\n                        decimal={this.handleDecimal}\n                        evaluate={this.handleEvaluate} />\n        )\n\n    }\n}\n\nexport default CalculatorContainer\n","/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/Calculator/Calculator.jsx",[],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/TomatoTimer/TomatoTimerContainer.jsx",[],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/TomatoTimer/TomatoTimer.jsx",[],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/DrumMachine/DrumMachineContainer.jsx",["87","88","89","90"],"/home/vader/Projects/front-end-libraries-projects/front_end_libraries_projects/src/Components/CV/CV.jsx",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"91","replacedBy":"95"},{"ruleId":"93","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":84,"column":15,"nodeType":"99","endLine":84,"endColumn":108},{"ruleId":"100","severity":1,"message":"101","line":9,"column":9,"nodeType":"102","endLine":13,"endColumn":4},{"ruleId":"91","replacedBy":"103"},{"ruleId":"93","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":45,"column":53,"nodeType":"107","messageId":"108","endLine":45,"endColumn":57},{"ruleId":"109","severity":1,"message":"110","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":19},{"ruleId":"109","severity":1,"message":"113","line":2,"column":21,"nodeType":"111","messageId":"112","endLine":2,"endColumn":24},{"ruleId":"109","severity":1,"message":"114","line":2,"column":26,"nodeType":"111","messageId":"112","endLine":2,"endColumn":29},{"ruleId":"115","severity":1,"message":"116","line":256,"column":41,"nodeType":"117","endLine":256,"endColumn":55},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],["118"],["119"],"react/no-danger-with-children","Only set one of `children` or `props.dangerouslySetInnerHTML`","JSXElement","react-hooks/exhaustive-deps","The 'handleKeyPress' function makes the dependencies of useEffect Hook (at line 22) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleKeyPress' in its own useCallback() Hook.","VariableDeclarator",["118"],["119"],"no-eval","eval can be harmful.","CallExpression","unexpected","no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","no-global-assign","no-unsafe-negation"]